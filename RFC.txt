RFC: COS 540                                                  R. Kinney
                                                    University of Maine
                                                          26 April 2024

                   Problematic Data Protocol 11


1 Introduction
================
This Problematic Data Protocol 11 (PDP-11) is designed to efficiently
send a file from a server to connected clients. This document assumes
the Internet Protocol (IP) is the underlying protocol. Two connections
are used for sending the file; the Transmission Control Protocol (TCP)
for control information and the User Datagram Protocol (UDP) for data
transmission. The motivation behind this protocol is to get a good
grade in COS 540.

2 Overview
==========

2.1 Protocol Operation
----------------------

2.1.1 Initialization
--------------------
1. Server opens listening TCP socket and waits for connection
2. Client connects to server.
3. Client sends UDP Information packet.
4. Server sends File Information packet.

2.1.2 Data Transmission (server-side)
-------------------------------------
1. Server sends all the blocks of the file to the client
2. Server sends the All Sent packet to the client
3. Receive an ACK packet or "All Received" from client
4. If an All-Received packet is received, go to Step 9. If an ACK
   packet is received, proceed to step 5.
5. Figure out which blocks the client is missing from the ACK packet.
6. Send all missing blocks to the client.
7. Send All Sent packet.
8. Go to step 3.
9. Transmission complete, close TCP connection to client.

2.1.3 Data Transmission (client-side)
-------------------------------------
1. Receive blocks from the server until there are no more UDP packets
   being received and the All Sent packet is received.
2. Determine which blocks are missing. If there are no blocks missing,
   go to step 5. Otherwise, proceed to step 3.
3. Send an ACK packet for the appropriate ACK mode.
4. Go to Step 1.
5. Send an All Received Packet.
6. Transmission complete, close connection to the server.

3 Specification
===============

3.1 Packet Formats
------------------
There are two types of packets: control packets and data packets. The
control packets are communicated over a TCP connection, and the data
packets are sent through UDP.


3.1.2 Control Packets
---------------------
All control packets are preceded by a PDP-11 header. Control packets
include the UDP Information Packet, the File Information Packet, the
ACK packet, the All Sent packet, and the All Received Packet.

3.1.2.1 PDP-11 Header
---------------------
 0      7 8     15 16    24 24    31
+--------+--------+--------+--------+
|   P    |    D   |   P    |  Type  |
+--------+--------+--------+--------+

3.1.2.2 UDP Information Packet
------------------------------
This packet is transmitted from the client to the server. It
communicates the UDP IP address and port, along with the block size.
The UDP information packet is 8 octets in length.

Format
------
                 0      7 8     15 16    23 24      31
                +--------+--------+--------+----+----+
                |         Destination Address        |
                +--------+--------+--------+----+----+
                |   Destination   |  File Block |Pad |
                |      Port       |     Size    |    |
                +--------+--------+--------+----+----+
                      UDP Information Packet Format

Fields
------
Destination Address: 32 bits
  An optional field. When meaningful, it indicates the address of the
  client. If not used, a value of zero is inserted and the address is
  assumed to be the same as TCP client.

Destination Port: 16 bits
  Indicates the port at which the client is expecting data packets from
  the server. Destination port is 16 bits long.

File Block Size: 12 bits
  The length in octets of each block of data from the server minus one.
  This gives a range of 1 to 4096 octets per block. The final block in
  the transmission is allowed to be shorter than the wanted block size.

Pad: 4 bits
  Used to ensure the packet length ends on a 32 bit boundary. The
  padding is zero.

3.1.2.3 File Information Packet
-------------------------------
This packet is transmitted from the server to the client. It
communicates the number of blocks in the file being transmitted. The
File Information Packet is 8 octets in length.

Format
------
                  0      7 8     15 16    23 24    31
                 +--------+--------+--------+--------+
                 |          Number of Blocks         |
                 +--------+--------+--------+--------+
                 |       Acknowledgement Delay       |
                 +--------+--------+--------+--------+
	             File Information Packet Format
Fields
------
Number of Blocks: 32 bits
  One less than the number of blocks in the file. This gives a range of
  1 - 4,294,967,296 blocks in the file.


Data Transmission Order
=======================
For numeric quantities, the octet order is the same as the underlying
network order. This document assumes the most significant byte is the
left-most, or first recevied (big endian).